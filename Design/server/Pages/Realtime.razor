@page "/realtime"
@layout MainLayout
@inherits SimmeMqqt.Pages.RealtimeComponent
@inject HttpClient Http;
@inject NavigationManager NavigationManager
@using Radzen
@using Radzen.Blazor
@using SimmeMqqt.Controllers
@using Microsoft.Extensions.DependencyInjection;
@using Microsoft.AspNetCore.SignalR.Client
<RadzenContent Container="main">
  <ChildContent>
    <RadzenHeading Size="H1" Text="Realtime">
    </RadzenHeading>
                  <RadzenCard class="m-3" style="margin-left: 125px; width: 750px">
                <h3 class="h5">Extra Informatie</h3>
                <div class="row">
                    <div class="col-md-4" style="width:400px">
                        <div>Huidige pauze</div>
                        <b>Pauze: @Pauze</b>
                    </div>
                    <div class="col-md-8">
                        <div>Huidige storing</div>
                        <b>Storing: @Failure</b>
                    </div>
                </div>
            </RadzenCard>
    <RadzenHeading Size="H3" style="border-radius: -1px; float: none; margin-bottom: 0px; margin-left: 100px; margin-right: 0px; margin-top: 0px; position: static; text-align: center; vertical-align: baseline; width: 152px" Text="Beschikbaarheid                                                 ">
    </RadzenHeading>
    <RadzenHeading Size="H3" style="border-radius: -1px; float: none; margin-bottom: 0px; margin-left: 525px; margin-right: 0px; margin-top: -30px; position: static; text-align: center; vertical-align: baseline; width: 152px" Text="Prestaties                                         ">
    </RadzenHeading>
    <RadzenRadialGauge style="border-radius: 0px; height: 350px; width: 400px" Beschikbaarheid="50">
      <ChildContent>
        <RadzenRadialGaugeScale Min="0" ShowFirstTick="true" ShowLastTick="true" ShowTickLabels="true" Step="10" StrokeWidth="1" TickLabelOffset="20" TickLength="1" TickPosition="GaugeTickPosition.Outside" X="0.5" Y="0.5">
          <ChildContent>
            <RadzenRadialGaugeScalePointer Value="@Beschikbaarheid">
              <Template Context="data">
              <h4>
                 @data.Value.ToString("0.00") <sup>%</sup>
              </h4>
              </Template>
            </RadzenRadialGaugeScalePointer>
            <RadzenRadialGaugeScaleRange>
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="red" From="0" To="65">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="yellow" From="65" To="80">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="green" From="80" To="90">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="blue" From="90" To="100">
            </RadzenRadialGaugeScaleRange>
          </ChildContent>
        </RadzenRadialGaugeScale>
      </ChildContent>
    </RadzenRadialGauge>
    <RadzenRadialGauge style="border-radius: 0px; float: none; height: 350px; width: 400px" Prestatie="50">
      <ChildContent>
        <RadzenRadialGaugeScale Min="0" Step="10" StrokeWidth="1" TickLabelOffset="20" TickLength="1" TickPosition="GaugeTickPosition.Outside" X="0.5" Y="0.5">
          <ChildContent>
            <RadzenRadialGaugeScalePointer Value="@Prestaties">
              <Template Context="data">
              <h4>
                 @data.Value.ToString("0.00") <sup>%</sup>
              </h4>
              </Template>
            </RadzenRadialGaugeScalePointer>
            <RadzenRadialGaugeScaleRange>
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="red" From="0" To="75">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="yellow" From="75" To="85">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="green" From="85" To="95">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="blue" From="95" To="100">
            </RadzenRadialGaugeScaleRange>
          </ChildContent>
        </RadzenRadialGaugeScale>
      </ChildContent>
    </RadzenRadialGauge>
    <RadzenHeading Size="H3" style="border-radius: -1px; float: none; margin-bottom: 0px; margin-left: 100px; margin-right: 0px; margin-top: 0px; position: static; text-align: center; width: 152px" Text="Kwaliteit                                              ">
    </RadzenHeading>
    <RadzenHeading Size="H3" style="border-radius: -1px; float: none; margin-bottom: 0px; margin-left: 525px; margin-right: 0px; margin-top: -30px; position: static; text-align: center; vertical-align: baseline; width: 152px" Text="OEE                                    ">
    </RadzenHeading>
    <RadzenRadialGauge style="border-radius: 0px; height: 350px; width: 400px" Kwaliteit="50">
      <ChildContent>
        <RadzenRadialGaugeScale Min="0" Step="10" StrokeWidth="1" TickLabelOffset="20" TickLength="1" TickPosition="GaugeTickPosition.Outside" X="0.5" Y="0.5">
          <ChildContent>
            <RadzenRadialGaugeScalePointer Value="@Kwaliteit">
              <Template Context="data">
              <h4>
                 @data.Value.ToString("0.00") <sup>%</sup>
              </h4>
              </Template>
            </RadzenRadialGaugeScalePointer>
            <RadzenRadialGaugeScaleRange>
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="red" From="0" To="85">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="yellow" From="85" To="95">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="green" From="95" To="99">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="blue" From="99" To="100">
            </RadzenRadialGaugeScaleRange>
          </ChildContent>
        </RadzenRadialGaugeScale>
      </ChildContent>
    </RadzenRadialGauge>
    <RadzenRadialGauge style="border-radius: 0px; height: 350px; width: 400px" OEE="50">
      <ChildContent>
        <RadzenRadialGaugeScale Min="0" Step="10" StrokeWidth="1" TickLabelOffset="20" TickLength="1" TickPosition="GaugeTickPosition.Outside" X="0.5" Y="0.5">
          <ChildContent>
            <RadzenRadialGaugeScalePointer Value="@OEE">
              <Template Context="data">
              <h4>
                 @data.Value.ToString("0.00") <sup>%</sup>
              </h4>
              </Template>
            </RadzenRadialGaugeScalePointer>
            <RadzenRadialGaugeScaleRange>
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="red" From="0" To="41">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="yellow" From="41" To="65">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="green" From="65" To="85">
            </RadzenRadialGaugeScaleRange>
            <RadzenRadialGaugeScaleRange Fill="blue" From="85" To="100">
            </RadzenRadialGaugeScaleRange>
          </ChildContent>
        </RadzenRadialGaugeScale>
      </ChildContent>
    </RadzenRadialGauge>
          </ChildContent>
</RadzenContent>
@code {
    private float Beschikbaarheid;
    private float Prestaties;
    private float Kwaliteit;
    private float OEE;
    private int Pauze;
    private int Failure;

    private HubConnection hubConnection;

    protected async override Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/dashboardHub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<float,float,float,float,int,int>("RealtimeData", (Beschikbaarheid, Prestaties,Kwaliteit,OEE,Pauze,Failure) =>
                     {
                         SetDataRealtime(Beschikbaarheid,Prestaties,Kwaliteit,OEE,Pauze,Failure);
                     });
        await hubConnection.StartAsync();
    }

    public void SetDataRealtime(float beschikbaarheid, float prestaties, float kwaliteit, float oEE, int pauze,int failure)
    {
        Beschikbaarheid = beschikbaarheid;
        Prestaties = prestaties;
        Kwaliteit = kwaliteit;
        OEE = oEE;
        Pauze = pauze;
        Failure = failure;

        this.Reload();
    }
}
